buildscript {
    repositories {
        maven { url 'https://crystal.app.lss233.com/repositories/minecraft' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://repo.spongepowered.org/maven' }
        maven { url 'https://oss.jfrog.org/artifactory/libs-snapshot/' }
    }
    dependencies {
        classpath 'org.soraworld:ForgeGradleURI:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

ext {
    mcVersion = "1.12.2"
    forgeBuild = "2835"
    forgeVersion = "1.12.2-14.23.5." + forgeBuild
    sekkaVersion = "0.0.1"
}

version = mcVersion + "-" + forgeBuild + "-" + sekkaVersion
group = "org.sekka"
archivesBaseName = "Sekka"

sourceCompatibility = targetCompatibility = 1.8

repositories {
    maven { url 'https://crystal.app.lss233.com/repositories/minecraft' }
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://oss.jfrog.org/artifactory/oss-release-local/' }
    maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url 'https://repo.spongepowered.org/maven' }
    maven { url 'http://files.minecraftforge.net/maven' }
}

minecraft {
    mappings channel: 'snapshot', version: '20180814-1.12'
    runs {
        client {
            workingDirectory project.file('run/client')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
        server {
            workingDirectory project.file('run/server')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
    //coreMod = "org.sekka.core.SekkaCoreMod"
}

mixin {
    add sourceSets.main, "sekka.refmap.json"
}

configurations {
    shadow
    compile.extendsFrom(shadow)
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'
    shadow 'org.soraworld:hocon:1.2.3-SNAPSHOT'
    shadow 'org.spongepowered:mixin:0.7.11-SNAPSHOT'
    //shadow project(":SekkaAPI")
    //shadow files('lib/SekkaAPI-0.0.1-SNAPSHOT.jar')
    /*compileOnly('org.spongepowered:spongeapi:7.1.0-SNAPSHOT') {
        transitive = false
    }*/
    compileOnly('org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT') {
        transitive = false
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", '1.12.2'

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': '1.12.2'
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    configurations.shadow.copyRecursive().setTransitive(false).each {
        artifact -> from(zipTree(artifact))
    }
    includeEmptyDirs = false
    exclude 'log4j2.xml', 'META-INF/MUMFREY.RSA', 'LICENSE.txt'
    manifest {
        attributes(
                'TargetForgeBuild': forgeBuild,
                'TargetForgeVersion': forgeVersion,
                'FMLCorePlugin': 'org.sekka.core.SekkaCoreMod',
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0
        )
    }
}
